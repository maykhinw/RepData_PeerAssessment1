box_office_all <- c(461, 314.4, 290.5, 247.9, 309.3, 165.8)
movie_names <- c("A New Hope","The Empire Strikes Back","Return of the Jedi")
col_titles <- c("US","non-US")
star_wars_matrix <- matrix(box_office_all, nrow = 3, byrow = TRUE, dimnames = list(movie_names, col_titles))
ticket_prices_matrix <- matrix(c(5, 5, 6, 6, 7, 7), nrow = 3, byrow = TRUE, dimnames = list(movie_names, col_titles))
box_office_all
movie_names
col_titles
star_wars_matrix
ticket_prices_matrix
star_wars_matrix / ticket_prices_matrix
visitors <- star_wars_matrix / ticket_prices_matrix
visitors[,1]
mean(visitors[,1])
mean(visitors[,2])
?factor
survey_vector <- c("M", "F", "F", "M", "M")
survey_vector
factor_survey_vector <- factor(x = survey_vector, levels  = c("Male", Female))
factor_survey_vector <- factor(x = survey_vector, levels  = c("M", F))
factor_survey_vector <- factor(x = survey_vector, levels  = c("M", "F"))
factor_survey_vector
?"data.frame"
?order
q()
?order
library(swirl)
swirl()
q()
library(swirl)
swirl
swirl()
q()
q()
licence()
q()
library(kernlab)
data(Spam)
data(spam)
str(spam)
clr
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndocator)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1, ]
testSpam = spam[trainIndicator == 0, ]
names(trainSpam)
head(trainSpam)
table(trainSpam)
table(trainSpam$type)
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hClusterUpdated = hclust(dist(tlog10(trainSpam[, 1:55] + 1)))
hClusterUpdated = hclust(dist(t(log10(trainSpam[, 1:55] + 1))))
plot(hClusterUpdated)
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x,y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for (i in 1:55) {}
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
}
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
getwd()
dir()
ls()
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
warnings()
names(trainSpam)[which.min(cvError)]
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonSpam", dim(testSpam)[1])
predictedSpam[predictionModel$fiited > 0.5] = "spam"
table(predictedSpam, testSpam$type)
q()
install.packages("dplyr")
install.packages("knitr")
install.packages("ggplot2")
setwd("C:/Users/mwongi/maykhin-repo/RepData_PeerAssessment1")
q()
